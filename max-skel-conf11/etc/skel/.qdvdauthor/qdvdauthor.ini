<QDVDAuthorInitFile visible_region="false" max_history="10" pngrender="true" max_threads="2" first_start="1" style="Windows" version="3" delete_older_than="30" autosave="300" language="es" tabs="1,1,1" >
 <PreferredEngine>QMPlayerWidget</PreferredEngine>
 <ExternalPlayer>qplayer</ExternalPlayer>
 <TemplateAuthor></TemplateAuthor>
 <TemplateContact></TemplateContact>
 <Color number="0" >#ff9eee81</Color>
 <Color number="1" >#ff8feed3</Color>
 <Color number="2" >#ffe0ee8f</Color>
 <Color number="3" >#ffed97ee</Color>
 <Color number="4" >#ff9eee81</Color>
 <Color number="5" >#ff8feed3</Color>
 <Color number="6" >#ffe0ee8f</Color>
 <Color number="7" >#ffed97ee</Color>
 <Color number="8" >#ff9eee81</Color>
 <Color number="9" >#ff8feed3</Color>
 <Color number="10" >#ffe0ee8f</Color>
 <Color number="11" >#fff92f5e</Color>
 <Path name="bash" >/bin/bash</Path>
 <Path name="dvdauthor" >/usr/bin/dvdauthor</Path>
 <Path name="spumux" >/usr/bin/spumux</Path>
 <Path name="mplex" >/usr/bin/mplex</Path>
 <Path name="qrender" >/usr/bin/qrender</Path>
 <Path name="dv2sub" >dv2sub</Path>
 <Path name="arecord" >/usr/bin/arecord</Path>
 <Path name="movie-to-dvd" >/usr/bin/movie-to-dvd</Path>
 <Path name="transcode" >transcode</Path>
 <Path name="mencoder" >/usr/bin/mencoder</Path>
 <Path name="ffmpeg" >/usr/bin/ffmpeg</Path>
 <Path name="png2yuv" >/usr/bin/png2yuv</Path>
 <Path name="oggdec" >/usr/bin/oggdec</Path>
 <Path name="mp2enc" >/usr/bin/mp2enc</Path>
 <Path name="lame" >/usr/bin/lame</Path>
 <Path name="mplayer" >/usr/bin/mplayer</Path>
 <Path name="jpegtopnm" >/usr/bin/jpegtopnm</Path>
 <Path name="ppmtoy4m" >/usr/bin/ppmtoy4m</Path>
 <Path name="mpeg2enc" >/usr/bin/mpeg2enc</Path>
 <Path name="jpeg2yuv" >/usr/bin/jpeg2yuv</Path>
 <Path name="pcm2aiff" >pcm2aiff</Path>
 <Path name="toolame" >toolame</Path>
 <Path name="mctoolame" >mctoolame</Path>
 <Path name="dd" >/bin/dd</Path>
 <Path name="dvd-slideshow" >/usr/bin/dvd-slideshow</Path>
 <Path name="sox" >/usr/bin/sox</Path>
 <Path name="pngtopnm" >/usr/bin/pngtopnm</Path>
 <Path name="convert" >/usr/bin/convert</Path>
 <Path name="growisofs" >/usr/bin/growisofs</Path>
 <Path name="dvd+rw-format" >/usr/bin/dvd+rw-format</Path>
 <Path name="mkisofs" >/usr/bin/mkisofs</Path>
 <Path name="dvdisaster" >dvdisaster</Path>
 <Path name="dvdrecord" >/usr/bin/dvdrecord</Path>
 <Path name="wodim" >/usr/bin/wodim</Path>
 <DragNDrop start_offset="00:00:00" thumbnail_size="50x50" start_when="true" button_type="1" text_pos="1" duration="00:00:00" nice="0" color="#ffff0000" with_text="1" button_size="150x150" >
  <Font>DejaVu Sans,9,-1,5,50,0,0,0,0,0</Font>
 </DragNDrop>
 <SlideDefaults ImageDelay="5" Format="NTSC 4:3" Intro="true" Transition="1" FilterDelay="3" >
  <TransitionList>Cross Fade</TransitionList>
 </SlideDefaults>
 <ExecuteInterface>
  <Convert color="#f92f5e" blockname="Conversion Block" >
   <Block editable="false" hidden="2" name="MOVIE_BACKGROUND" >
    <Comment>Videotrans is a tool to convert the input movie file into a DVD (+VIDEO_FORMAT+) conforming VOB stream.</Comment>
    <Comment>Transcode is a tool to convert the input movie file into a DVD (+VIDEO_FORMAT+) conforming VOB stream.</Comment>
    <Comment>Mencoder is a tool to convert the input movie file into a DVD (+VIDEO_FORMAT+) conforming VOB stream.</Comment>
    <Comment>FFMpeg is a tool to convert the input movie file into a DVD (+VIDEO_FORMAT+) conforming VOB stream.</Comment>
    <Command>#=- VideoTrans -=#  +INPUT_NAME+</Command>
    <Command>#=- Transcode -=#  +INPUT_NAME+</Command>
    <Command default="true" >#=- MEncoder -=#  +INPUT_NAME+</Command>
    <Command>#=- FFMpeg -=#  +INPUT_NAME+</Command>
    <Command>+BASE_NAME+.+FILE_EXT+</Command>
    <SubBlock number="0" name="Videotrans" >
     <Block editable="false" hidden="0" name="Videotrans" >
      <Comment>The following line will trancode the video (+BASE_NAME+.+FILE_EXT+)</Comment>
      <Command default="true" >movie-to-dvd -M -c +AUDIO_TYPE+ -a +RATIO+ -f audio -m +VIDEO_FORMAT+ -o &quot;+TEMP_PATH+/+BASE_NAME+/&quot; &quot;+INPUT_NAME+&quot; &amp;&amp; mv &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.vob&quot; &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot;</Command>
      <Command>movie-to-dvd -M -c +AUDIO_TYPE+ -a +RATIO+ -f video -m +VIDEO_FORMAT+ -o &quot;+TEMP_PATH+/+BASE_NAME+/&quot; &quot;+INPUT_NAME+&quot; &amp;&amp; mv &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.vob&quot; &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" name="Transcode" >
     <Block editable="false" hidden="1" name="Transcode1" >
      <Comment>This will convert the input movie file from +FILE_EXT+ - format into DVD (+VIDEO_FORMAT+) conforming material.</Comment>
      <Command>transcode -i &quot;+INPUT_NAME+&quot; -x ffmpeg -V -w +VIDEO_BITRATE+ --encode_fields b --export_asr +RATIO+ -F &quot;8,-c -q 6 -4 2 -2 1 -N 0.5 -E -10&quot; -K tmpgenc -R 2 -y mpeg2enc,mp2enc -b +AUDIO_BITRATE+ -m &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpa&quot; -o &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot; --print_status 10</Command>
      <Command default="true" >transcode -i &quot;+INPUT_NAME+&quot; -y ffmpeg --export_prof dvd -o &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+&quot;</Command>
     </Block>
     <Block editable="false" hidden="0" name="Transcode2" >
      <Comment>Here we check if the input had an audio channel attached.</Comment>
      <Command default="true" >if [ ! -e &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpa&quot; ]; then cp /usr/share/qdvdauthor/silence.mp2 &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpa&quot; ; fi; </Command>
     </Block>
     <Block editable="false" hidden="0" name="Transcode3" >
      <Comment>And then we multiplex the audio and video stream back into one file.</Comment>
      <Command default="true" >mplex -f 8 -S 0 -M -o &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot; &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot; &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpa&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" name="MEncoder" >
     <Block editable="false" hidden="0" name="MEncoder1" >
      <Comment>This line will transcode the input file ( +BASE_NAME+.+FILE_EXT+ )</Comment>
      <Command default="true" >mencoder -oac lavc -ovc lavc -ss +STARTING_AT+ -endpos +ENDING_AT+ -mpegopts format=dvd:tsaf -lavcopts vcodec=mpeg2video:vrc_buf_size=1835:aspect=+RATIO+:vrc_maxrate=9800:vbitrate=+VIDEO_BITRATE+:keyint=15:acodec=+AUDIO_TYPE+:abitrate=+AUDIO_BITRATE+ -vf scale=+WIDTH+:+HEIGHT+,harddup -srate +SAMPLE_RATE+ -ofps +FRAME_RATE+ -of mpeg -o &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot; &quot;+INPUT_NAME+&quot; </Command>
      <Command>mencoder -oac lavc -ovc lavc -ss +STARTING_AT+ -endpos +ENDING_AT+ -mpegopts format=dvd:tsaf -lavcopts vcodec=mpeg2video:vrc_buf_size=1835:aspect=+RATIO+:vrc_maxrate=9800:vbitrate=+VIDEO_BITRATE+:keyint=15:acodec=+AUDIO_TYPE+:abitrate=+AUDIO_BITRATE+ -vf scale=+WIDTH+:+HEIGHT+,harddup -srate +SAMPLE_RATE+ -af lavcresample=+SAMPLE_RATE+ -ofps +FRAME_RATE+ -of mpeg -o  &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot; &quot;+INPUT_NAME+&quot; </Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" name="FFMpeg" >
     <Block editable="false" hidden="0" name="FFMpeg1" >
      <Comment>Here we create an mpeg2 stream from the input material.</Comment>
      <Command default="true" >ffmpeg -i &quot;+INPUT_NAME+&quot; -target +VIDEO_FORMAT+-dvd -ss +STARTING_AT+ -t +DURATION+ -vcodec mpeg2video -b +VIDEO_BITRATE+ -acodec ac3 -ab +AUDIO_BITRATE+ -ar +SAMPLE_RATE+ -s +WIDTH+x+HEIGHT+ -r +FRAME_RATE+ -aspect +RATIO+ -y &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot;</Command>
      <Command>ffmpeg -i &quot;+INPUT_NAME+&quot; -target +VIDEO_FORMAT+-dvd &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot;</Command>
     </Block>
    </SubBlock>
   </Block>
   <Block editable="false" hidden="2" name="IMAGE_BACKGROUND" >
    <Comment>Videotrans is a tool to convert the input movie file into a DVD (+VIDEO_FORMAT+) conforming VOB stream.</Comment>
    <Comment>Transcode is a tool to convert the input movie file into a DVD (+VIDEO_FORMAT+) conforming VOB stream.</Comment>
    <Comment>Mencoder is a tool to convert the input movie file into a DVD (+VIDEO_FORMAT+) conforming VOB stream.</Comment>
    <Comment>FFMpeg is a tool to convert the input movie file into a DVD (+VIDEO_FORMAT+) conforming VOB stream.</Comment>
    <Command>#=- VideoTrans -=#  +INPUT_NAME+</Command>
    <Command>#=- Transcode -=#  +INPUT_NAME+</Command>
    <Command default="true" >#=- MEncoder -=#  +INPUT_NAME+</Command>
    <Command>#=- FFMpeg -=#  +INPUT_NAME+</Command>
    <SubBlock number="0" name="Videotrans" >
     <Block editable="false" hidden="0" name="Videotrans" >
      <Comment>First we create the elementary streams (video and audio).</Comment>
      <Command default="true" >movie-to-dvd -a +RATIO+ -c +AUDIO_TYPE+ -f audio -m +VIDEO_FORMAT+ -o &quot;+TEMP_PATH+/+BASE_NAME+/&quot; &quot;+INPUT_NAME+&quot;</Command>
      <Command>movie-to-dvd -c +AUDIO_TYPE+ -M -a +RATIO+ -f audio -m +VIDEO_FORMAT+ -o &quot;+TEMP_PATH+/+BASE_NAME+/&quot; &quot;+INPUT_NAME+&quot; &amp;&amp; mv &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.vob&quot; &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot;</Command>
     </Block>
     <Block editable="false" hidden="0" name="Videotrans1" >
      <Comment>Then we need to multiplex all video and audio streams back together.</Comment>
      <Command default="true" >mplex -f 8 -S 0 -M -o &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot; &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot; &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.+AUDIO_TYPE+&quot; +AUDIO_LIST+</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" name="Transcode" >
     <Block editable="false" hidden="1" name="Transcode1" >
      <Comment>This will convert the input movie file from +FILE_EXT+ - format into DVD (+VIDEO_FORMAT+) conforming material.</Comment>
      <Command>transcode -i &quot;+INPUT_NAME+&quot; -x ffmpeg -V -w +VIDEO_BITRATE+ --encode_fields b --export_asr +RATIO+ -F &quot;8,-c -q 6 -4 2 -2 1 -N 0.5 -E -10&quot; -K tmpgenc -R 2 -y mpeg2enc,mp2enc -b +AUDIO_BITRATE+ -m &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpa&quot; -o &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot; --print_status 10</Command>
      <Command default="true" >transcode -i &quot;+INPUT_NAME+&quot; -y ffpeg --export_prof dvd -o &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+&quot;</Command>
     </Block>
     <Block editable="false" hidden="0" name="Transcode2" >
      <Comment>Here we check if the input had an audio channel attached.</Comment>
      <Command default="true" >if [ ! -e &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpa&quot; ]; then cp /usr/share/qdvdauthor/silence.mp2 &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpa&quot; ; fi; </Command>
     </Block>
     <Block editable="false" hidden="0" name="Transcode3" >
      <Comment>And then we multiplex the audio and video streams back into one file.</Comment>
      <Command default="true" >mplex -f 8 -S 0 -M -o &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot; &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot; &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpa&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" name="MEncoder" >
     <Block editable="false" hidden="0" name="MEncoder1" >
      <Comment>Here we create an mpeg2 stream from the input material.</Comment>
      <Command default="true" >mencoder -oac lavc -ovc lavc -ss +STARTING_AT+ -endpos +ENDING_AT+ -mpegopts format=dvd:tsaf -lavcopts vcodec=mpeg2video:vrc_buf_size=1835:aspect=+RATIO+:vrc_maxrate=9800:vbitrate=+VIDEO_BITRATE+:keyint=15:acodec=+AUDIO_TYPE+:abitrate=+AUDIO_BITRATE+ -vf scale=+WIDTH+:+HEIGHT+,harddup -srate +SAMPLE_RATE+ -af lavcresample=+SAMPLE_RATE+ -ofps +FRAME_RATE+ -of mpeg -o  &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot; &quot;+INPUT_NAME+&quot; </Command>
     </Block>
     <Block editable="false" hidden="0" name="MEncoder2" >
      <Comment>We take the mpeg2 file and extract the elementary streams (audio and video).</Comment>
      <Command default="true" >mplayer -dumpfile &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot; -dumpvideo &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot; &amp;&amp; mplayer -dumpfile &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.+AUDIO_TYPE+&quot; -dumpaudio &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot;</Command>
      <Command>demux &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot; 0xe0 &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot; &amp;&amp; demux &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot; 0xbd &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.+AUDIO_TYPE+&quot; 0x80</Command>
     </Block>
     <Block editable="false" hidden="0" name="MEncoder3" >
      <Comment>And then we multiplex the video stream and all audio streams back into one VOB file.</Comment>
      <Command default="true" >mplex -f 8 -S 0 -M -o &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot; &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot; &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.+AUDIO_TYPE+&quot; +AUDIO_LIST+ </Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" name="FFMpeg" >
     <Block editable="false" hidden="0" name="FFMpeg1" >
      <Comment>First we extract the Audio from the input.</Comment>
      <Command default="true" >ffmpeg -i &quot;+INPUT_NAME+&quot; -vn -acodec +AUDIO_TYPE+ -ar +SAMPLE_RATE+ -ab +AUDIO_BITRATE+ -y &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.+AUDIO_TYPE+&quot;</Command>
     </Block>
     <Block editable="false" hidden="0" name="FFMpeg2" >
      <Comment>Next we extract the Video from the input.</Comment>
      <Command default="true" >ffmpeg -i &quot;+INPUT_NAME+&quot; -an -acodec copy -y &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot;</Command>
     </Block>
     <Block editable="false" hidden="0" name="FFMpeg3" >
      <Comment>And then we multiplex the video stream and all audio streams back into one VOB file.</Comment>
      <Command default="true" >ffmpeg -i &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.+AUDIO_TYPE+&quot; -i &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot; +AUDIO_LIST+ -aspect +RATIO+ -target +VIDEO_FORMAT+-dvd &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot;</Command>
     </Block>
    </SubBlock>
   </Block>
   <Block editable="false" hidden="1" name="MPLEX" >
    <Comment>Here we simply take the input video and re-multiplex it</Comment>
    <Command>#=- MEncoder -=#  +INPUT_NAME+</Command>
    <Command default="true" >#=- FFMpeg -=#  +INPUT_NAME+</Command>
    <SubBlock number="0" name="MEncoder" >
     <Block editable="false" hidden="0" name="MEncoder1" >
      <Comment>We take the mpeg2 file and extract the Elementary streams (audio and video).</Comment>
      <Command default="true" >mplayer -dumpfile &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot; -dumpvideo &quot;+INPUT_NAME+&quot; &amp;&amp; mplayer -dumpfile &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2a&quot; -dumpaudio &quot;+INPUT_NAME+&quot;</Command>
      <Command>demux &quot;+INPUT_NAME+&quot; 0xe0 &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot; &amp;&amp; demux &quot;+INPUT_NAME+&quot; 0xbd &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2a&quot; 0x80</Command>
     </Block>
     <Block editable="false" hidden="0" name="MEncoder2" >
      <Comment>And then we multiplex the video stream and all audio streams back into one file.</Comment>
      <Command default="true" >mplex -f 8 -S 0 -M -o &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot; &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot; &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2a&quot; +AUDIO_LIST+ </Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" name="FFMpeg" >
     <Block editable="false" hidden="0" name="FFMpeg1" >
      <Comment>First we extract the Audio from the input.</Comment>
      <Command default="true" >ffmpeg -i &quot;+INPUT_NAME+&quot; -vn -acodec +AUDIO_TYPE+ -ar +SAMPLE_RATE+ -ab +AUDIO_BITRATE+ -y &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.+AUDIO_TYPE+&quot;</Command>
     </Block>
     <Block editable="false" hidden="0" name="FFMpeg2" >
      <Comment>Next we extract the Video from the input.</Comment>
      <Command default="true" >ffmpeg -i &quot;+INPUT_NAME+&quot; -an -acodec copy -y &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot;</Command>
     </Block>
     <Block editable="false" hidden="0" name="FFMpeg3" >
      <Comment>And then we multiplex the video stream and all audio streams back into one VOB file.</Comment>
      <Command default="true" >ffmpeg -i &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.+AUDIO_TYPE+&quot; -i &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.m2v&quot; -aspect +RATIO+ -target +VIDEO_FORMAT+-dvd -ar +SAMPLE_RATE+ -ab +AUDIO_BITRATE+ -y &quot;+TEMP_PATH+/+BASE_NAME+/+BASE_NAME+.mpeg2&quot;</Command>
     </Block>
    </SubBlock>
   </Block>
   <Block editable="false" hidden="0" name="EMPTY_SOUND" >
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>First we create the temp directory.</Comment>
      <Command default="true" >mkdir -p &quot;+TEMP_PATH+/+TRACK_NAME+&quot;</Command>
     </Block>
     <Block editable="false" hidden="0" >
      <Comment>The first audio file needs to include the wav header</Comment>
      <Command default="true" >mplayer &quot;+INPUT_NAME+&quot; -vo null -ao pcm:file=&quot;+TEMP_PATH+/+TRACK_NAME+/audio0.pcm&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" foreachinput="1" >
     <Block editable="false" hidden="0" >
      <Comment>This audio file does not need another header.</Comment>
      <Command default="true" >mplayer &quot;+INPUT_NAME+&quot; -vo null -ao pcm:nowaveheader:file=&quot;+TEMP_PATH+/+TRACK_NAME+/audio+FOREACH_COUNTER+.pcm&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>Then we concatenate all audio files together.</Comment>
      <Command default="true" >pushd &quot;+TEMP_PATH+/+TRACK_NAME+&quot;; cat audio*.pcm > track.pcm; popd</Command>
     </Block>
     <Block editable="false" hidden="0" >
      <Comment>Finally we convert the pcm file into mp2.</Comment>
      <Command default="true" >mp2enc -b +AUDIO_BITRATE+ -r +SAMPLE_RATE+ -o &quot;+TEMP_PATH+/+TRACK_NAME+.mp2&quot; &lt; &quot;+TEMP_PATH+/+TRACK_NAME+/track.pcm&quot;</Command>
     </Block>
    </SubBlock>
   </Block>
   <Block editable="false" hidden="0" name="OTHERS" >
    <Comment>This line converts the input audio file into a DVD conforming mp2 file.</Comment>
    <Command default="true" >if [ ! -e &quot;+TEMP_PATH+/qdvd.fifo&quot; ]; then mkfifo -m 777 &quot;+TEMP_PATH+/qdvd.fifo&quot;; fi; cat &quot;+TEMP_PATH+/qdvd.fifo&quot; | mp2enc -b +AUDIO_BITRATE+ -r +SAMPLE_RATE+ -o &quot;+TEMP_PATH+/+BASE_NAME+.+AUDIO_TYPE+&quot; &amp; mplayer &quot;+INPUT_NAME+&quot; -vo null -ao pcm:file=&quot;+TEMP_PATH+/qdvd.fifo&quot;</Command>
    <Command>ffmpeg -i &quot;+INPUT_NAME+&quot; -ab +AUDIO_BITRATE+ -ar +SAMPLE_RATE+ -acodec +AUDIO_TYPE+ &quot;+TEMP_PATH+/+BASE_NAME+.+AUDIO_TYPE+&quot;</Command>
    <Command>lame --quiet --decode &quot;+INPUT_NAME+&quot; - | mp2enc -b +AUDIO_BITRATE+ -r +SAMPLE_RATE+ -o &quot;+TEMP_PATH+/+BASE_NAME+.+AUDIO_TYPE+&quot;</Command>
    <Command>mplayer &quot;+INPUT_NAME+&quot; -vo null -ao pcm:file=&quot;+TEMP_PATH+/temp.pcm&quot; ; mp2enc -b +AUDIO_BITRATE+ -r +SAMPLE_RATE+ -o &quot;+TEMP_PATH+/+BASE_NAME+.+AUDIO_TYPE+&quot; &lt; &quot;+TEMP_PATH+/temp.pcm&quot;</Command>
   </Block>
  </Convert>
  <Subtitles color="#000000" blockname="Subtitles" >
   <Block editable="false" hidden="0" name="OTHERS" >
    <Comment>&lt;p align=&quot;center&quot;>This command will multiplex subtitles into the video stream.&lt;/p></Comment>
    <Command default="true" >spumux -m dvd -s +SUBTITLE_NUMBER+ &quot;+TEMP_PATH+/+BASE_NAME+/subtitle_+SUBTITLE_NUMBER+.xml&quot; &lt; &quot;+INPUT_FILE_NAME+&quot; +MULTIPLE_SUBTITLE_PIPE+ > &quot;+TEMP_PATH+/+BASE_NAME+/subtitles.vob&quot;</Command>
   </Block>
  </Subtitles>
 </ExecuteInterface>
 <ExecuteInterface>
  <Slideshow color="#000000" blockname="+MENU_NAME+ Button Transitions" >
   <Block editable="true" hidden="0" name="MOVIE_BACKGROUND" >
    <Comment>&lt;p align=&quot;center&quot;>This command render slideshows for Button Transitions.&lt;/p></Comment>
    <Command default="true" >qrender -v 5 -ix &quot;+TEMP_PATH+/+MENU_NAME+/+BUTTON_NAME+/transition.xml&quot; -o &quot;+TEMP_PATH+/+MENU_NAME+/+BUTTON_NAME+/transition.vob&quot;</Command>
   </Block>
  </Slideshow>
 </ExecuteInterface>
 <ExecuteInterface>
  <Pal color="#000000" blockname="+MENU_NAME+ (PAL +WIDTH+x+HEIGHT+)" >
   <Block editable="false" hidden="0" name="MOVIE_BACKGROUND" >
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>This Command will extract the timeframe of interest.&lt;/p></Comment>
      <Command default="true" >mkdir -p &quot;+TEMP_PATH+/+MENU_NAME+/background&quot;; mencoder -oac copy -ovc copy -ss +START_POS+ -endpos +DURATION+ -o &quot;+TEMP_PATH+/+MENU_NAME+/background/clip.avi&quot; &quot;+BACKGROUND_FULL_NAME+&quot;</Command>
      <Command>mkdir -p &quot;+TEMP_PATH+/+MENU_NAME+/background&quot;; ln -s &quot;+BACKGROUND_FULL_NAME+&quot; &quot;+TEMP_PATH+/+MENU_NAME+/background/clip.avi&quot;; echo &quot;Skipping cleaning of source file&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>This line of commands will clean up the source movie&lt;BR>&lt;U>Note :&lt;/U>Might not be needed.&lt;/p></Comment>
      <Command default="true" >ln -s &quot;+TEMP_PATH+/+MENU_NAME+/background/clip.avi&quot; &quot;+TEMP_PATH+/+MENU_NAME+/background/clean.avi&quot;; echo &quot;Skipping cleaning of source file&quot;</Command>
      <Command>mencoder -oac null -ovc lavc -o &quot;+TEMP_PATH+/+MENU_NAME+/background/clean.avi&quot; &quot;+TEMP_PATH+/+MENU_NAME+/background/clip.avi&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>Here we extract the audio part of the source background&lt;/p></Comment>
      <Command default="true" >mplayer -ao pcm:file=&quot;+TEMP_PATH+/+MENU_NAME+/background/clean.wav&quot; -vo null -vc dummy &quot;+TEMP_PATH+/+MENU_NAME+/background/clip.avi&quot;</Command>
      <Command>mplayer -ao pcm -vo null -vc dummy -aofile &quot;+TEMP_PATH+/+MENU_NAME+/background/clean.wav&quot; &quot;+TEMP_PATH+/+MENU_NAME+/background/clip.avi&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>And now we extract the image files of the source movie&lt;/p></Comment>
      <Command default="true" >mplayer -ao null -vo jpeg:outdir=&quot;+TEMP_PATH+/+MENU_NAME+/background&quot; &quot;+TEMP_PATH+/+MENU_NAME+/background/clean.avi&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>And this is the place where we internally render the images&lt;/p></Comment>
      <Command default="true" >#=- Internal : Render Menu -=# +MENU_NAME+</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>We can remove the big temp files&lt;/p></Comment>
      <Command default="true" >cd &quot;+TEMP_PATH+/+MENU_NAME+/&quot;; find . -name clip.avi -exec rm {} \;; find . -name clean.avi -exec rm {} \;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>This line of commands will convert the extracted frames &lt;BR>into a MPEG2 stream in PAL format +WIDTH+x+HEIGHT+&lt;/p></Comment>
      <Command default="true" >png2yuv -j &quot;+TEMP_PATH+/+MENU_NAME+/background/rendered_%08d.png&quot; -I p -f 25 -b 1 | mpeg2enc -f 8 -n p -a +ASPECT+ -F 3 -M 1 -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.m2v&quot;</Command>
      <Command>jpeg2yuv -j &quot;+TEMP_PATH+/+MENU_NAME+/background/rendered_%08d.jpg&quot; -I p -f 25 -b 1 | mpeg2enc -f 8 -n p -a +ASPECT+ -F 3 -M 1 -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.m2v&quot;</Command>
     </Block>
    </SubBlock>
   </Block>
   <Block editable="false" hidden="0" name="IMAGE_BACKGROUND" >
    <Comment>&lt;p align=&quot;center&quot;>This line of command will convert the background image&lt;BR>into a MPEG2 stream in PAL format +WIDTH+x+HEIGHT+&lt;/p></Comment>
    <Command default="true" >jpegtopnm &quot;+BACKGROUND_FULL_NAME+&quot; | ppmtoy4m -n +NR_OF_FRAMES+ -r -S 420mpeg2 -F25:1 -A59:54 -I t -L | mpeg2enc -f 8 -n p -a +ASPECT+ -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.m2v&quot;</Command>
    <Command>jpeg2yuv -n +NR_OF_FRAMES+ -I p -f 25 -j &quot;+BACKGROUND_FULL_NAME+&quot; | mpeg2enc -n p -f 8 -a +ASPECT+ -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.m2v&quot;</Command>
   </Block>
   <Block editable="false" hidden="0" name="EMPTY_SOUND" >
    <Comment>&lt;p align=&quot;center&quot;>This line creates an empty sound file to mix into the menu-movie.&lt;/p></Comment>
    <Command default="true" >cp /usr/share/qdvdauthor/silence.ac3 &quot;+TEMP_PATH+/+MENU_NAME+/menu.mp2&quot;</Command>
    <Command>arecord -f dat -twav -d 1 | mp2enc -r 48000 -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.mp2&quot;</Command>
    <Command>arecord -S -M -t 1 -w /dev/stdout | mp2enc -r 48000 -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.mp2&quot;</Command>
    <Command>sox -t raw -s -w -c 2 -r 48000 /dev/zero -t wav -c 2 -r 48000 /dev/stdout trim 0 1 | mp2enc -r 48000 -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.mp2&quot;</Command>
    <Command>dd if=/dev/zero bs=4 count=1920 | toolame -b192 -s 48000 /dev/stdin &quot;+TEMP_PATH+/+MENU_NAME+/menu.mp2&quot;</Command>
   </Block>
   <Block editable="false" hidden="0" name="MPLEX" >
    <Comment>&lt;p align=&quot;center&quot;>The following command will multiplex the sound file into the menu-movie.&lt;/p></Comment>
    <Command default="true" >mplex -f 8 -S 0 -M -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.mpg&quot; &quot;+TEMP_PATH+/+MENU_NAME+/menu.m2v&quot; +SOUND_LIST+</Command>
   </Block>
   <Block editable="false" hidden="0" name="SPUMUX" >
    <Comment>&lt;p align=&quot;center&quot;>Here we use spumux to add the subpicture (buttons) to the mpeg2 video.&lt;/p></Comment>
    <Command default="true" >spumux -m dvd &quot;+TEMP_PATH+/+MENU_NAME+/menu.xml&quot; &lt; &quot;+TEMP_PATH+/+MENU_NAME+/menu.mpg&quot; > &quot;+TEMP_PATH+/+MENU_NAME+_menu.mpg&quot;</Command>
   </Block>
  </Pal>
  <Ntsc color="#000000" blockname="+MENU_NAME+ (NTSC +WIDTH+x+HEIGHT+)" >
   <Block editable="false" hidden="0" name="MOVIE_BACKGROUND" >
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>This Command will extract the requested timeframe.&lt;/p></Comment>
      <Command default="true" >mkdir -p &quot;+TEMP_PATH+/+MENU_NAME+/background&quot;; mencoder -oac copy -ovc copy -ss +START_POS+ -endpos +DURATION+ -o &quot;+TEMP_PATH+/+MENU_NAME+/background/clip.avi&quot; &quot;+BACKGROUND_FULL_NAME+&quot;</Command>
      <Command>mkdir -p &quot;+TEMP_PATH+/+MENU_NAME+/background&quot;; ln -s &quot;+BACKGROUND_FULL_NAME+&quot; &quot;+TEMP_PATH+/+MENU_NAME+/background/clip.avi&quot;; echo &quot;Skipping cleaning of source file&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>This line of command will clean up the source movie&lt;BR>Might not be needed.&lt;/p></Comment>
      <Command default="true" >ln -s &quot;+TEMP_PATH+/+MENU_NAME+/background/clip.avi&quot; &quot;+TEMP_PATH+/+MENU_NAME+/background/clean.avi&quot;; echo &quot;Skipping cleaning of source file&quot;</Command>
      <Command>mencoder -oac null -ovc lavc -o &quot;+TEMP_PATH+/+MENU_NAME+/background/clean.avi&quot; &quot;+TEMP_PATH+/+MENU_NAME+/background/clip.avi&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>Here we extract the audio part of the source background&lt;/p></Comment>
      <Command default="true" >mplayer -ao pcm:file=&quot;+TEMP_PATH+/+MENU_NAME+/background/clip.wav&quot; -vo null -vc dummy &quot;+TEMP_PATH+/+MENU_NAME+/background/clip.avi&quot;</Command>
      <Command>mplayer -ao pcm -vo null -vc dummy -aofile &quot;+TEMP_PATH+/+MENU_NAME+/background/clip.wav&quot; &quot;+TEMP_PATH+/+MENU_NAME+/background/clip.avi&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>And now we extract the image files of the source movie&lt;/p></Comment>
      <Command default="true" >mplayer -ao null -vo jpeg:outdir=&quot;+TEMP_PATH+/+MENU_NAME+/background&quot; &quot;+TEMP_PATH+/+MENU_NAME+/background/clean.avi&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>And this is the place where we internally render the images&lt;/p></Comment>
      <Command default="true" >#=- Internal : Render Menu -=# +MENU_NAME+</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>We can remove the big temp files&lt;/p></Comment>
      <Command default="true" >cd &quot;+TEMP_PATH+/+MENU_NAME+/&quot;; find . -name clip.avi -exec rm {} \;; find . -name clean.avi -exec rm {} \;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>&lt;p align=&quot;center&quot;>This line of command will convert the extracted frames &lt;BR>into a MPEG2 stream in NTSC format +WIDTH+x+HEIGHT+&lt;/p></Comment>
      <Command default="true" >png2yuv -j &quot;+TEMP_PATH+/+MENU_NAME+/background/rendered_%08d.png&quot; -I p -f 29.97 -b 1 | mpeg2enc -f 8 -n n -a +ASPECT+ -F 4 -M 1 -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.m2v&quot;</Command>
      <Command>jpeg2yuv -j &quot;+TEMP_PATH+/+MENU_NAME+/background/rendered_%08d.jpg&quot; -I p -f 29.97 -b 1 | mpeg2enc -f 8 -n n -a +ASPECT+ -F 4 -M 1 -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.m2v&quot;</Command>
     </Block>
    </SubBlock>
   </Block>
   <Block editable="false" hidden="1" name="IMAGE_BACKGROUND" >
    <Comment>&lt;p align=&quot;center&quot;>This line of command will convert the background image&lt;BR>into a MPEG2 stream in NTSC format +WIDTH+x+HEIGHT+&lt;/p></Comment>
    <Command>jpegtopnm &quot;+BACKGROUND_FULL_NAME+&quot; | ppmtoy4m -n +NR_OF_FRAMES+ -r -S 420mpeg2 -F30000:1001 -A10:11 -I t -L | mpeg2enc -f 8 -n n -a +ASPECT+ -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.m2v&quot;</Command>
    <Command default="true" >jpeg2yuv -n +NR_OF_FRAMES+ -I p -f 29.97 -j &quot;+BACKGROUND_FULL_NAME+&quot; | mpeg2enc -n n -f 8 -a +ASPECT+ -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.m2v&quot;</Command>
   </Block>
   <Block editable="false" hidden="0" name="EMPTY_SOUND" >
    <Comment>&lt;p align=&quot;center&quot;>This line creates an empty sound file to mix into the menu-movie.&lt;/p></Comment>
    <Command default="true" >cp /usr/share/qdvdauthor/silence.ac3 &quot;+TEMP_PATH+/+MENU_NAME+/menu.mp2&quot;</Command>
    <Command>arecord -f dat -twav -d 1 | mp2enc -r 48000 -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.mp2&quot;</Command>
    <Command>arecord -S -M -t 1 -w /dev/stdout | mp2enc -r 48000 -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.mp2&quot;</Command>
    <Command>sox -t raw -s -w -c 2 -r 48000 /dev/zero -t wav -c 2 -r 48000 /dev/stdout trim 0 1 | mp2enc -r 48000 -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.mp2&quot;</Command>
    <Command>dd if=/dev/zero bs=4 count=1601 | toolame -b192 -s 48000 /dev/stdin &quot;+TEMP_PATH+/+MENU_NAME+/menu.mp2&quot;</Command>
   </Block>
   <Block editable="false" hidden="0" name="MPLEX" >
    <Comment>&lt;p align=&quot;center&quot;>The following command will multiplex the sound file into the menu-movie.&lt;/p></Comment>
    <Command default="true" >mplex -f 8 -S 0 -M -o &quot;+TEMP_PATH+/+MENU_NAME+/menu.mpg&quot; &quot;+TEMP_PATH+/+MENU_NAME+/menu.m2v&quot; +SOUND_LIST+</Command>
   </Block>
   <Block editable="false" hidden="0" name="SPUMUX" >
    <Comment>&lt;p align=&quot;center&quot;>Here we use spumux to add the subpicture (buttons) to the mpeg2 video.&lt;/p></Comment>
    <Command default="true" >spumux -m dvd &quot;+TEMP_PATH+/+MENU_NAME+/menu.xml&quot; &lt; &quot;+TEMP_PATH+/+MENU_NAME+/menu.mpg&quot; > &quot;+TEMP_PATH+/+MENU_NAME+_menu.mpg&quot;</Command>
   </Block>
  </Ntsc>
 </ExecuteInterface>
 <ExecuteInterface>
  <Dvdauthor color="#f92f5e" blockname="dvdauthor" >
   <Block editable="false" hidden="0" name="OTHERS" >
    <Comment>Here we start dvdauthor with the generated xml file.</Comment>
    <Command default="true" >dvdauthor -x &quot;+DVDAUTHOR_XML+&quot;</Command>
   </Block>
  </Dvdauthor>
 </ExecuteInterface>
 <ExecuteInterface hidden="true" >
  <Burning color="#e0ee8f" blockname="Burn DVD" >
   <Block editable="false" hidden="0" name="OTHERS" >
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>This command will format a empty -RW DVD (only needed for older drives).</Comment>
      <Command default="true" >dvd+rw-format -f /dev/srcd0</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>Last we burn the DVD.</Comment>
      <Command default="true" >growisofs -Z /dev/dvd -dvd-video &quot;+PROJECT_PATH+/&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>This command generates an iso image of the DVD.</Comment>
      <Command default="true" >mkisofs -dvd-video -udf -o &quot;+TEMP_PATH+/dvd.iso&quot; &quot;+PROJECT_PATH+/&quot;</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>This command will add Error Correction Codes (ECC) to the iso image.</Comment>
      <Command default="true" >dvdisaster -i &quot;+TEMP_PATH+/dvd.iso&quot; -mRS02 -n 350000 -c</Command>
     </Block>
    </SubBlock>
    <SubBlock number="0" >
     <Block editable="false" hidden="0" >
      <Comment>This command burns the iso DVD image to DVD</Comment>
      <Command default="true" >dvdrecord -dao speed=2 dev=0,0,0 &quot;+TEMP_PATH+/dvd.iso&quot;</Command>
      <Command>wodim -dao speed=2 dev=0,0,0 &quot;+TEMP_PATH+/dvd.iso&quot;</Command>
     </Block>
    </SubBlock>
   </Block>
  </Burning>
 </ExecuteInterface>
</QDVDAuthorInitFile>
